; Lab2, zadatak1.a
; Fran Zekan

        ORG 0
        B MAIN
        ORG 0x18
        B RUN_IRQ

MAIN
        ; init and reset outputs
        LDR R1, GPIO
        
        MOV R2, #0b11100000
        STR R2, [R1, #8]
        LDR R2, LEDS
        STR R2, [R1, #0]

        ; init irq
        MSR CPSR, #0b11010010
        MOV R13, #0x10000

        MSR CPSR, #0b11010011
        MOV R13, #0xFC00

        ; init RTC
        LDR R0, RTC

        MOV R1, #0
        STR R1, [R0, #0x0C] ; reset count

        MOV R1, #5
        STR R1, [R0, #0x04] ; when to trigger

        MOV R1, #1
        STR R1, [R0, #0x10] ; allow interrupts

        MRS R0, CPSR
        BIC R0, R0, #0b10000000
        MSR CPSR, R0

LOOP    B LOOP

RUN_IRQ STMFD SP!, {R0-R3}
        
        ; set leds
        LDR R0, GPIO
        MOV R2, #LEDS
        LDR R3, LED_IND    ; load curr index
        LDRB R1, [R2, R3]  ; load curr state
        STRB R1, [R0, #0]

        CMP R3, #3 ; index 3
        BEQ RST_CNT
        ADD R3, R3, #1
        B DONE
RST_CNT MOV R3, #0

DONE    STR R3, LED_IND
        LDMFD SP!, {R0-R3}

        ; reset counter
        LDR R0, RTC
        MOV R1, #0
        STR R1, [R0, #0x0C]
        STR R1, [R0, #0x08]

        SUBS PC, LR, #4

        ORG 500

; devices
RTC     DW 0xFFFF0E00
GPIO    DW 0xFFFF0B00

; stores
LEDS    DB 0b00100000, 0b01100000, 0b10000000, 0b01000000
LED_IND DW 1 ; since we start with state[0] on load


